/*
 * Copyright (c) 2024 ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUNC 4
#define MEDIA 5
#define MOUSE 6

/* custom behaviors */

/* ZMK_BEHAVIOR */

#define ZMK_BEHAVIOR_CORE_caps_word       compatible = "zmk,behavior-caps-word";       #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_dynamic_macro   compatible = "zmk,behavior-dynamic-macro";   #binding-cells = <1>
#define ZMK_BEHAVIOR_CORE_hold_tap        compatible = "zmk,behavior-hold-tap";        #binding-cells = <2>
#define ZMK_BEHAVIOR_CORE_key_repeat      compatible = "zmk,behavior-key-repeat";      #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_macro           compatible = "zmk,behavior-macro";           #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_macro_one_param compatible = "zmk,behavior-macro-one-param"; #binding-cells = <1>
#define ZMK_BEHAVIOR_CORE_macro_two_param compatible = "zmk,behavior-macro-two-param"; #binding-cells = <2>
#define ZMK_BEHAVIOR_CORE_mod_morph       compatible = "zmk,behavior-mod-morph";       #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_sticky_key      compatible = "zmk,behavior-sticky-key";      #binding-cells = <1>
#define ZMK_BEHAVIOR_CORE_tap_dance       compatible = "zmk,behavior-tap-dance";       #binding-cells = <0>
#define ZMK_BEHAVIOR_CORE_tri_state       compatible = "zmk,behavior-tri-state";       #binding-cells = <0>

#define ZMK_BEHAVIOR(name, type, ...) \
    / { \
        behaviors { \
            name: name { \
                ZMK_BEHAVIOR_CORE_ ## type; \
                __VA_ARGS__ \
            }; \
        }; \
    };

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
)

/ {
	keymap {
		compatible = "zmk,keymap";

		base_layer {
			bindings = <
&kp Q			&kp W			&kp E			&kp R			&kp T				&kp Y			&kp U			&kp I			&kp O			&kp P 
&hrm LGUI A		&hrm LALT S		&hrm LCTRL D	&hrm LSHIFT F	&kp G				&kp H			&hrm LSHIFT J	&hrm LCTRL K	&hrm LALT L		&hrm LGUI SEMI          
&kp Z			&kp X			&kp C			&kp V			&kp B				&kp N			&kp M			&kp COMMA		&kp DOT			&kp SLASH      
								&lt MEDIA ESC	&lt NAV SPACE	&lt MOUSE TAB		&lt SYM RET		&lt NUM BSPC	&lt FUNC DEL

			>;
		};

		nav_layer {
			bindings = <
&trans			&trans			&trans			&trans			&trans				&trans			&trans			&trans			&trans			&trans
&kp LGUI		&kp LALT		&kp LCTRL		&kp LSHIFT		&trans				&kp LEFT		&kp DOWN		&kp UP			&kp RIGHT		&kp CAPS
&trans		 	&trans			&trans			&trans			&trans				&kp HOME		&kp PG_DN		&kp PG_UP		&kp END			&trans        
								&kp ESC			&kp SPACE		&kp TAB				&kp RET			&kp BSPC		&kp DEL
			>;
		};

		num_layer {
			bindings = <
&kp LBKT		&kp N7			&kp N8			&kp N9			&kp RBKT			&trans			&trans			&trans			&trans			&trans
&kp SQT 		&kp N4			&kp N5			&kp N6			&kp EQUAL			&trans			&kp LSHIFT 		&kp LCTRL		&kp LALT 		&kp LGUI
&kp GRAVE   	&kp N1			&kp N2			&kp N3			&kp BACKSLASH		&trans			&trans			&trans			&trans			&trans        
								&kp KP_DOT		&kp KP_N0		&kp MINUS			&kp RET			&kp BSPC		&kp DEL
			>;
		};

		sym_layer {
			bindings = <
&kp LBRC	 	&kp AMPERSAND	&kp ASTERISK	&kp LPAR		&kp RBRC			&trans			&trans			&trans			&trans			&trans
&kp DQT		  	&kp DOLLAR		&kp PERCENT		&kp CARET		&kp PLUS			&trans			&kp LSHIFT 		&kp LCTRL		&kp LALT 		&kp LGUI  
&kp TILDE   	&kp EXCL		&kp AT			&kp HASH		&kp PIPE			&trans			&trans			&trans			&trans			&trans        
								&kp LPAR		&kp RPAR		&kp UNDER			&kp RET			&kp BSPC		&kp DEL
			>;
		};

		func_layer {
			bindings = <
&kp F12		 	&kp F7			&kp F8			&kp F9			&kp F15				&bt BT_CLR		&bt BT_SEL 2	&bt BT_SEL 1	&bt BT_SEL 0	&bootloader	 
&kp F11		 	&kp F4			&kp F5			&kp F6			&kp F14				&trans			&kp LSHIFT 		&kp LCTRL		&kp LALT 		&kp LGUI  
&kp F10		 	&kp F1			&kp F2			&kp F3			&kp F13				&trans			&trans			&trans			&trans			&trans        
								&kp ESC			&kp SPACE		&kp TAB				&kp RET			&kp BSPC		&kp DEL
			>;
		};

		media_layer {
			bindings = <
&bootloader	 	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_CLR			&kp C_AC_REDO	&kp C_AC_PASTE	&kp C_AC_COPY	&kp C_AC_CUT	&kp C_AC_UNDO
&kp LGUI		&kp LALT		&kp LCTRL		&kp LSHIFT		&trans				&kp C_PREV		&kp C_VOL_DN	&kp C_VOL_UP	&kp C_NEXT		&trans  
&trans		   	&trans			&trans			&trans			&trans				&trans			&trans			&trans			&trans			&trans       
								&kp ESC			&kp SPACE		&kp TAB				&kp RET			&kp C_PP		&kp C_MUTE
			>;
		};

		mouse_layer {
			bindings = <
&trans		 	&trans			&trans			&trans			&trans				&trans			&trans			&trans			&trans			&trans
&kp LGUI		&kp LALT		&kp LCTRL		&kp LSHIFT		&trans				&trans			&kp LSHIFT 		&kp LCTRL		&kp LALT 		&kp LGUI
&trans   		&trans			&trans			&trans			&trans				&trans			&trans			&trans			&trans			&trans        
								&kp ESC			&kp SPACE		&kp TAB				&kp RET			&kp BSPC		&kp DEL
			>;
		};
	};
};
